#include "I2Cdev.h"
#include "MPU6050.h"
#include <RH_ASK.h>
#include <SPI.h>

#define fBound -16000
#define sBound 1
#define bBound 16000
#define lBound 16000
#define rBound -15800

#define minimum 100

MPU6050 mpu;
int16_t ax, ay, az;
int16_t gx, gy, gz;

RH_ASK trans;
char vals[3];
char *s;
char message[4];

void setup() {
  // put your setup code here, to run once:
  Serial.begin(38400);

  mpu.initialize();
  if (!trans.init()) {
    Serial.println("init failed");
  }
}

//takes in read val and boundary to find speed
void calcSpeed(int r, int b){
//  int spd = abs((r*255)/b);
  Serial.print("Speed: "); Serial.println(spd);
  Serial.print("r: "); Serial.println(r);
  Serial.print("b: "); Serial.println(b);
//  int spd = 5;
  if (spd < minimum){
    spd = minimum;
  }
  
  if (spd/10 == 0){
//    message[4] = char(0);
//    message[5] = char(0);
//    message[6] = char(spd);
      //#, dest, base
      itoa(0, message+4, 10);
      itoa(0, message+5, 10);
      itoa(spd, message+6, 10);
  }
  else if (spd/100 == 0){
//    message[4] = char(0);
//    message[5] = char(spd / 10);
//    message[6] = char(spd % 10);
      itoa(0, message+4, 10);
      itoa((spd/10), message+5, 10);
      itoa((spd%10), message+6, 10);
  }
  else {
//    message[4] = char(spd/100);
//    message[5] = char(spd/10)%10;
//    message[6] = char(spd%10);
      itoa((spd/100), message+4, 10);
      itoa((spd/10)%10, message+5, 10);
      itoa((spd%10), message+6, 10);
  }

//    itoa(1, message+4, 10);
//    message[5] = '1';
//    message[6] = '1';
    message[7] = '\0';
}

void loop() {
  // put your main code here, to run repeatedly:
  mpu.getMotion6(&ax, &ay, &az, &gx, &gy, &gz);

//S = stop, L = Left, R = Right
//F = Forward, B = Back, C = Continue
  if (az > 14000) {
    strcpy(message, "Stop000\0");
  }
  else if (ax >= 6000) {
    strcpy(message, "Left");
    calcSpeed(ax, lBound);
  }
  else if (ax < -5000) {
    strcpy(message, "Rght");
    calcSpeed(ax, rBound);
  }
  else if (ay < -5000) {
    strcpy(message, "Forw");
    calcSpeed(ay, fBound);
  }
  else if (ay > 6400 || az > 13000) {
    strcpy(message, "Back");
    if (ay > 6400) {
      calcSpeed(ay, bBound);
    }
    else {
      calcSpeed(az, bBound);
    }
  }

//  trans.send((uint8_t *)message, strlen(message));
//  trans.waitPacketSent(); 
  Serial.println(message);
  
  delay(1000);
}
